{
  "files": {
    "public_tests.py": {
      "category": "public",
      "data": "import unittest\nimport sys\n\nundertest = __import__(sys.argv[-1].split(\".py\")[0])\nagrupa_negativos = getattr(undertest, 'agrupa_negativos', None)\n\nclass PublicTests(unittest.TestCase):\n\n    def test_example(self):\n        assert agrupa_negativos([10, -2, -7, 8]) == {\"nao-negativos\":[10, 8], \"negativos\":[-2,-7]}\n        assert agrupa_negativos([-1, -5]) == {\"nao-negativos\":[ ], \"negativos\":[-1, -5]}\n\nif __name__ == '__main__':\n    loader = unittest.TestLoader()\n    runner = unittest.TextTestRunner()\n    runner.run(loader.loadTestsFromModule(sys.modules[__name__]))\n",
      "name": "public_tests.py"
    },
    "agrupa.py": {
      "category": "answer",
      "data": "# -*- coding: utf-8 -*-\n# jonathan.tavares.silva\n# 118210631\n\ndef agrupa_negativos(l):\n\tnegativos_positivos = {'nao-negativos': [], 'negativos': []}\n\n\tfor i in range(len(l)):\n\t\tif l[i] >= 0:\n\t\t\tnegativos_positivos['nao-negativos'].append(l[i])\n\t\telse:\n\t\t\tnegativos_positivos['negativos'].append(l[i])\n\treturn negativos_positivos\n\nprint agrupa_negativos([])\nprint agrupa_negativos([1,-2,0,1])\nprint agrupa_negativos([-2222, -1, -6])\nprint agrupa_negativos([222, 1, 0, 3, 4])\n",
      "name": "agrupa.py"
    }
  },
  "kind": "assignment",
  "name": null,
  "checksum": "90cb34103ae52ee2a0103cf0a4c24814",
  "iid": 5212102792839168,
  "activity_revision": "1.0.0"
}