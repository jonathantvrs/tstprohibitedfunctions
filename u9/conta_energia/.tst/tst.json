{
  "files": {
    "public_tests.py": {
      "category": "public",
      "data": "# coding: utf-8\nimport unittest\nimport sys\n\nundertest = __import__(sys.argv[-1].split(\".py\")[0])\ncalcula_conta = getattr(undertest, 'calcula_conta', None)\n\nclass PublicTests(unittest.TestCase):\n    \n    def test_1(self):\n        tabela = [[\"Equipamento\", \"Quantidade\", \"Tempo de Uso (horas)\", \"Potencia (Watts)\"], [\"AR-CONDICIONADO\", 1, 240, 2000], [\"COMPUTADOR\", 2, 150, 180], [\"TV\", 3, 150, 110]]\n\n        assert calcula_conta(tabela) == \"R$ 163.38\"\n\nif __name__ == '__main__':\n    loader = unittest.TestLoader()\n    runner = unittest.TextTestRunner()\n    runner.run(loader.loadTestsFromModule(sys.modules[__name__]))\n"
    },
    "conta.py": {
      "category": "answer",
      "data": "# coding: utf-8\n# jonathan.tavares.silva\n# 118210631\t\n\ndef calcula_conta(tabela):\n\ttabela_valores = []\n\tfor i in range(1, len(tabela)):\n\t\tfor j in range(1, len(tabela[i])):\n\t\t\ttabela_valores.append(tabela[i][j])\n\tconta = 0.0\n\tfor k in range(0, len(tabela_valores), 3):\n\t\tconta += tabela_valores[k] * tabela_valores[k + 1] * (float(tabela_valores[k + 2]) / 1000)\n\t\n\treturn \"R$ %.2f\" % (conta * 0.28)\n\nprint calcula_conta([[\"Eqp\", \"Qtd\", \"Tmp\", \"Pot\"],[\"Ar\", 1,240,2000],[\"Pc\", 2, 150, 180],[\"Tv\", 3, 150, 110]])\n",
      "name": "conta.py"
    }
  },
  "kind": "assignment",
  "name": null,
  "checksum": "9b0811ee69a126082a71bb8589d2dacb",
  "iid": 5784302239350784,
  "activity_revision": "1.0.0"
}