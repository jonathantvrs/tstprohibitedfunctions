{
  "files": {
    "public_tests.py": {
      "category": "public",
      "data": "import unittest\nimport sys\n\nundertest = __import__(sys.argv[-1].split(\".py\")[0])\nbusca_matriz = getattr(undertest, 'busca_matriz', None)\n\nclass PublicTests(unittest.TestCase):\n\n    def test_exemplo_1(self):\n        matriz = [\n            [2, 3, 5, 3, 1],\n            [3, 2, 1, 5, 6],\n            [1, 2, 3, 2, 1],\n        ]\n        assert busca_matriz(matriz, 4) == None\n        \nif __name__ == '__main__':\n    loader = unittest.TestLoader()\n    runner = unittest.TextTestRunner()\n    runner.run(loader.loadTestsFromModule(sys.modules[__name__]))\n",
      "name": "public_tests.py"
    },
    "busca.py": {
      "category": "answer",
      "data": "# -*- coding: utf-8 -*-\n# author: jonathan.tavares.silva\n# matricula: 118210631\n\n\ndef busca_matriz(m, e):\n    for i in range(len(m)):\n        for j in range(len(m[i])):\n            if m[i][j] == e:\n                return (i,j)\n    return None\n\n\nprint busca_matriz([[],[2],[]], 1)\nprint busca_matriz([[2,3,5,3,1],[3,2,1,5,6],[1,2,3,2,1]], 3)\nprint busca_matriz([[2,3,5,3],[3,2,1,5,6],[1,2,3,2,1]], 1)\nprint busca_matriz([[2,3,5,3,1],[3,2,1,5,6],[1,2,3,2,1]], 3)\nprint busca_matriz([[2,3,5,3,1],[3,2,1,5,6],[1,2,3,2,1]], 4)\n",
      "name": "busca.py"
    }
  },
  "kind": "assignment",
  "name": null,
  "checksum": "8e42b00bac0bb0417dec524306c33036",
  "iid": 5774668212469760,
  "activity_revision": "1.0.0"
}